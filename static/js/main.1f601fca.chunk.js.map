{"version":3,"sources":["images/ie6.png","images/logo.png","components/VoiceController.js","config/roms.js","components/RomLoader.js","components/Nes.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","VoiceController","annyang","this","initVoiceRecognition","start","autoRestart","paused","continuous","debug","_this$props$rom","props","rom","commands","commandsLanguage","_this","romCommands","arguments","length","undefined","language","DEFAULT_LANGUAGE","removeCommands","asyncForEach","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","array","callback","index","wrap","_context","prev","next","stop","_x","_x2","apply","entries","reduce","carry","_ref2","_ref3","slicedToArray","key","fn","_ref4","_callee2","_context2","_ref5","_ref6","toArray","method","args","slice","objectSpread","defineProperty","left","keyPress","KEY_LEFT","right","KEY_RIGHT","up","KEY_UP","down","KEY_DOWN","select","KEY_SELECT","KEY_START","KEY_A","b","KEY_B","addCommands","setLanguage","timeout","keyHold","Promise","resolve","window","setTimeout","_this2","keyRelease","_ref9","document","dispatchEvent","KeyboardEvent","_ref11","delay","_ref13","react_default","createElement","className","keys","map","command","PureComponent","charCode","code","keyCode","which","roms","memory","name","file","9","7","1","3","see","2048","konami code","alert","2048pl","lewo","prawo","góra","dół","RomLoader","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onRomChange","bind","assertThisInitialized","e","identifier","target","value","onRomSelect","onChange","defaultValue","sort","Nes","nes","canvas","React","createRef","loadRom","onKeyDown","onKeyUp","current","initNes","removeEventListener","NesJs","setDisplay","Display","setAudio","Audio","addEventListener","handleKeyDown","handleKeyUp","romData","setState","url","fetch","response","arrayBuffer","buffer","Rom","setRom","bootup","run","style","height","width","ref","id","displayId","RomLoader_RomLoader","VoiceController_VoiceController","defaultProps","Footer","src","logo","alt","ie6Logo","href","rel","border","App","Header_Footer","Nes_Nes","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qUCInBC,8LAwEZC,MAGLC,KAAKC,uBAELF,IAAQG,MAAM,CACZC,aAAa,EACbC,QAAQ,EACRC,YAAY,IAGdN,IAAQO,sDAGW,IAAAC,EACoBP,KAAKQ,MAAMC,IAA1CC,EADWH,EACXG,SAAUC,EADCJ,EACDI,iBAClBX,KAAKC,qBAAqBS,EAAUC,kDAGgD,IAAAC,EAAAZ,KAAjEa,EAAiEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnD,KAAMG,EAA6CH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlChB,EAAgBoB,iBAClEnB,IAAQoB,iBAER,IAAIT,EAAW,GACf,GAAKG,EAWE,CAEL,IAAMO,EAAY,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAOC,GAAd,IAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACVJ,EAAQ,EADE,YACCA,EAAQF,EAAMb,QADf,CAAAiB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEXL,EAASD,EAAME,GAAQA,EAAOF,GAFnB,OACuBE,IADvBE,EAAAE,KAAA,gCAAAF,EAAAG,SAAAR,EAAA3B,SAAH,gBAAAoC,EAAAC,GAAA,OAAAhB,EAAAiB,MAAAtC,KAAAc,YAAA,GAKlBJ,EAAWY,OAAOiB,QAAQ1B,GACvB2B,OAAO,SAACC,EAADC,GAA2B,IAAAC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAoB,EAAA,GAAlBG,EAAkBF,EAAA,GAAbJ,EAAaI,EAAA,GAC3BG,EAAE,eAAAC,EAAAzB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAsB,IAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACHd,EAAamB,EAAS,SAAAW,GAAA,IAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA4B,GAAEG,EAAFF,EAAA,GAAaG,EAAbH,EAAAI,MAAA,SAAyC,oBAAXF,EAAwBA,EAAOC,GAAQ1C,EAAKyC,GAAQC,KADrG,wBAAAL,EAAAd,SAAAa,EAAAhD,SAAH,yBAAA+C,EAAAT,MAAAtC,KAAAc,YAAA,GAGR,OAAOQ,OAAAkC,EAAA,EAAAlC,CAAA,GAAKmB,EAAZnB,OAAAmC,EAAA,EAAAnC,CAAA,GAAoBuB,EAAMC,KACzB,SAvBLpC,EAAW,CACTgD,KAAM,kBAAM9C,EAAK+C,SAAS,CAAC7D,EAAgB8D,YAC3CC,MAAO,kBAAMjD,EAAK+C,SAAS,CAAC7D,EAAgBgE,aAC5CC,GAAI,kBAAMnD,EAAK+C,SAAS,CAAC7D,EAAgBkE,UACzCC,KAAM,kBAAMrD,EAAK+C,SAAS,CAAC7D,EAAgBoE,YAC3CC,OAAQ,kBAAMvD,EAAK+C,SAAS,CAAC7D,EAAgBsE,cAC7ClE,MAAO,kBAAMU,EAAK+C,SAAS,CAAC7D,EAAgBuE,aAC5C5C,EAAG,kBAAMb,EAAK+C,SAAS,CAAC7D,EAAgBwE,SACxCC,EAAG,kBAAM3D,EAAK+C,SAAS,CAAC7D,EAAgB0E,UAmB5CzE,IAAQ0E,YAAY/D,GACpBX,IAAQ2E,YAAYzD,4LAIN4B,cAAK8B,aAAU,MAC7B3E,KAAK4E,QAAQ,CAAC/B,sBACP,IAAIgC,QAAQ,SAACC,GAClBC,OAAOC,WAAW,WAChBC,EAAKC,WAAW,CAACrC,IACjBiC,KACCH,4IAKQ,IAAN9B,EAAMvB,OAAAsB,EAAA,EAAAtB,CAAA6D,EAAA,MACbC,SAASC,cAAc,IAAIC,cAAc,UAAWzC,0CAGpC,IAANA,EAAMvB,OAAAsB,EAAA,EAAAtB,CAAAiE,EAAA,MAChBH,SAASC,cAAc,IAAIC,cAAc,QAASzC,qCAGrC,IAAR2C,EAAQlE,OAAAsB,EAAA,EAAAtB,CAAAmE,EAAA,MACb,OAAO,IAAIZ,QAAQ,SAACC,GAAD,OAAaE,WAAW,kBAAMF,KAAWU,sCAGrD,IACC/E,EAAQT,KAAKQ,MAAbC,IACR,IAAKA,EACH,OAAO,KAHF,IAKCC,EAAaD,EAAbC,SACR,OAAKA,EAIHgF,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,gBACbF,EAAAjE,EAAAkE,cAAA,oCACAD,EAAAjE,EAAAkE,cAAA,UACGrE,OAAOuE,KAAKnF,GAAUoF,IAAI,SAAAC,GAAO,OAAIL,EAAAjE,EAAAkE,cAAA,MAAI9C,IAAKkD,GAAT,IAAoBA,EAApB,SANnC,YA9JgCC,iBAAxBlG,EACZoB,iBAAmB,QADPpB,EAGZ8D,SAAW,CAChBf,IAAK,YACLoD,SAAU,EACVC,KAAM,YACNC,QAAS,GACTC,MAAO,IARUtG,EAWZkE,OAAS,CACdnB,IAAK,UACLoD,SAAU,EACVC,KAAM,UACNC,QAAS,GACTC,MAAO,IAhBUtG,EAmBZoE,SAAW,CAChBrB,IAAK,YACLoD,SAAU,EACVC,KAAM,YACNC,QAAS,GACTC,MAAO,IAxBUtG,EA2BZgE,UAAY,CACjBjB,IAAK,aACLoD,SAAU,EACVC,KAAM,aACNC,QAAS,GACTC,MAAO,IAhCUtG,EAmCZsE,WAAa,CAClBvB,IAAK,IACLoD,SAAU,EACVC,KAAM,QACNC,QAAS,GACTC,MAAO,IAxCUtG,EA2CZuE,UAAY,CACjBxB,IAAK,QACLoD,SAAU,EACVC,KAAM,QACNC,QAAS,GACTC,MAAO,IAhDUtG,EAmDZwE,MAAQ,CACbzB,IAAK,IACLoD,SAAU,EACVC,KAAM,OACNC,QAAS,GACTC,MAAO,IAxDUtG,EA2DZ0E,MAAQ,CACb3B,IAAK,IACLoD,SAAU,EACVC,KAAM,OACNC,QAAS,GACTC,MAAO,IClEI,IAAAC,EAAA,CACbC,OAAU,CACRC,KAAM,SACNC,KAAM,aACN9F,SAAU,CACR+F,EAAK,CACH,CAAC,WAAY3G,EAAgBkE,QAC7B,CAAC,WAAYlE,EAAgBgE,YAE/B4C,EAAK,CACH,CAAC,WAAY5G,EAAgBkE,QAC7B,CAAC,WAAYlE,EAAgB8D,WAE/B+C,EAAK,CACH,CAAC,WAAY7G,EAAgBoE,UAC7B,CAAC,WAAYpE,EAAgB8D,WAE/BgD,EAAK,CACH,CAAC,WAAY9G,EAAgBoE,UAC7B,CAAC,WAAYpE,EAAgBgE,YAE/BJ,KAAM,CAAC,CAAC,WAAY5D,EAAgB8D,WACpCC,MAAO,CAAC,CAAC,WAAY/D,EAAgBgE,YACrCC,GAAI,CAAC,CAAC,WAAYjE,EAAgBkE,SAClCC,KAAM,CAAC,CAAC,WAAYnE,EAAgBoE,WACpChE,MAAO,CAAC,CAAC,WAAYJ,EAAgBuE,YACrCwC,IAAK,CAAC,CAAC,WAAY/G,EAAgBwE,UAGvCwC,KAAQ,CACNP,KAAM,OACNC,KAAM,WACN9F,SAAU,CACRgD,KAAM,CAAC,CAAC,WAAY5D,EAAgB8D,WACpCC,MAAO,CAAC,CAAC,WAAY/D,EAAgBgE,YACrCC,GAAI,CAAC,CAAC,WAAYjE,EAAgBkE,SAClCC,KAAM,CAAC,CAAC,WAAYnE,EAAgBoE,WACpCC,OAAQ,CAAC,CAAC,WAAYrE,EAAgBsE,aACtClE,MAAO,CAAC,CAAC,WAAYJ,EAAgBuE,YACrC0C,cAAe,CACb,CAAC,kBAAMC,MAAM,oEAGjBrG,iBAAkB,MAEpBsG,SAAU,CACRV,KAAM,YACNC,KAAM,WACN9F,SAAU,CACRwG,KAAM,CAAC,CAAC,WAAYpH,EAAgB8D,WACpCuD,MAAO,CAAC,CAAC,WAAYrH,EAAgBgE,YACrCsD,UAAQ,CAAC,CAAC,WAAYtH,EAAgBkE,SACtCqD,cAAO,CAAC,CAAC,WAAYvH,EAAgBoE,WACrChE,MAAO,CAAC,CAAC,WAAYJ,EAAgBuE,aAEvC1D,iBAAkB,OCpDD2G,cAKnB,SAAAA,EAAY9G,GAAO,IAAAI,EAAA,OAAAU,OAAAiG,EAAA,EAAAjG,CAAAtB,KAAAsH,IACjB1G,EAAAU,OAAAkG,EAAA,EAAAlG,CAAAtB,KAAAsB,OAAAmG,EAAA,EAAAnG,CAAAgG,GAAAI,KAAA1H,KAAMQ,KACDmH,MAAQ,CAAElH,IAAK,MACpBG,EAAKgH,YAAchH,EAAKgH,YAAYC,KAAjBvG,OAAAwG,EAAA,EAAAxG,QAAAwG,EAAA,EAAAxG,CAAAV,KAHFA,2EAMPmH,GAAG,IACYC,EAAiBD,EAAlCE,OAAUC,MACIzH,EAAQ4F,EAArB2B,GAEJvH,GAGLT,KAAKQ,MAAM2H,YAAY1H,oCAIvB,OACEiF,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,cACbF,EAAAjE,EAAAkE,cAAA,UAAQyC,SAAUpI,KAAK4H,aACrBlC,EAAAjE,EAAAkE,cAAA,UAAQ9C,IAAI,SAASwF,cAAY,EAACH,MAAO,MAAzC,qBACC5G,OAAOiB,QAAQ8D,GACbiC,OACAxC,IAAI,SAAAzE,GAAA,IAAAqB,EAAApB,OAAAsB,EAAA,EAAAtB,CAAAD,EAAA,GAAEwB,EAAFH,EAAA,GAAOjC,EAAPiC,EAAA,UAAiBgD,EAAAjE,EAAAkE,cAAA,UAAQ9C,IAAKA,EAAKqF,MAAOrF,GAAMpC,EAAI8F,iBA5B9BP,iBCElBuC,cAWnB,SAAAA,EAAY/H,GAAO,IAAAI,EAAA,OAAAU,OAAAiG,EAAA,EAAAjG,CAAAtB,KAAAuI,IACjB3H,EAAAU,OAAAkG,EAAA,EAAAlG,CAAAtB,KAAAsB,OAAAmG,EAAA,EAAAnG,CAAAiH,GAAAb,KAAA1H,KAAMQ,KACDgI,IAAM,KACX5H,EAAK6H,OAASC,IAAMC,YACpB/H,EAAK+G,MAAQ,CAAElH,IAAK,MAEpBG,EAAKgI,QAAUhI,EAAKgI,QAAQf,KAAbvG,OAAAwG,EAAA,EAAAxG,QAAAwG,EAAA,EAAAxG,CAAAV,KACfA,EAAKiI,UAAYjI,EAAKiI,UAAUhB,KAAfvG,OAAAwG,EAAA,EAAAxG,QAAAwG,EAAA,EAAAxG,CAAAV,KACjBA,EAAKkI,QAAUlI,EAAKkI,QAAQjB,KAAbvG,OAAAwG,EAAA,EAAAxG,QAAAwG,EAAA,EAAAxG,CAAAV,KAREA,mFAYjB,IAAM6H,EAASzI,KAAKyI,OAAOM,QAC3B/I,KAAKgJ,QAAQP,kDAIbrD,SAAS6D,oBAAoB,UAAWjJ,KAAK6I,WAAW,GACxDzD,SAAS6D,oBAAoB,QAASjJ,KAAK8I,SAAS,mCAG9CL,GAAQ,IACNS,EAAUnE,OAAVmE,MAEFV,EAAM,IAAIU,EAAMX,IACtBC,EAAIW,WAAW,IAAID,EAAME,QAAQX,IACjCD,EAAIa,SAAS,IAAIH,EAAMI,OAEvBlE,SAASmE,iBAAiB,UAAWvJ,KAAK6I,WAAW,GACrDzD,SAASmE,iBAAiB,QAASvJ,KAAK8I,SAAS,GAEjD9I,KAAKwI,IAAMA,oCAGHT,GACR/H,KAAKwI,IAAIgB,cAAczB,mCAGjBA,GACN/H,KAAKwI,IAAIiB,YAAY1B,2EAGT2B,0FACZ1J,KAAK2J,SAAS,SAAAZ,GAAO,OAAAzH,OAAAkC,EAAA,EAAAlC,CAAA,GAAUyH,EAAV,CAAmBtI,IAAKiJ,QAC3B3E,OAAVmE,UAEFU,mBAAgBF,EAAQlD,eACPqD,MAAMD,iBAAvBE,kBAEeA,EAASC,qBAAxBC,SACAvJ,EAAM,IAAIyI,EAAMe,IAAID,GAE1BhK,KAAKwI,IAAI0B,OAAOzJ,GAChBT,KAAKwI,IAAI2B,SACTnK,KAAKwI,IAAI4B,2IAIT,OACE1E,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,OACbF,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,KAAKyE,MAAO,CACzBC,OAAQtK,KAAKQ,MAAM8J,OAAS,GAC5BC,MAAOvK,KAAKQ,MAAM+J,MAAQ,MAE1B7E,EAAAjE,EAAAkE,cAAA,UACE6E,IAAKxK,KAAKyI,OACVgC,GAAIzK,KAAKQ,MAAMkK,UACfL,MAAO,CACLE,MAAOvK,KAAKQ,MAAM+J,MAClBD,OAAQtK,KAAKQ,MAAM8J,WAIzB5E,EAAAjE,EAAAkE,cAACgF,EAAD,CACExC,YAAanI,KAAK4I,UAEpBlD,EAAAjE,EAAAkE,cAACiF,EAAD,CACEnK,IAAKT,KAAK2H,MAAMlH,cAxFOuF,iBAAZuC,EAOZsC,aAAe,CACpBH,UAAW,iDCXMI,mLAEjB,OACEpF,EAAAjE,EAAAkE,cAAA,cACED,EAAAjE,EAAAkE,cAAA,OAAKoF,IAAKC,IAAMC,IAAI,OAAOrF,UAAU,SACrCF,EAAAjE,EAAAkE,cAAA,4BACAD,EAAAjE,EAAAkE,cAAA,OAAKoF,IAAKG,IAASD,IAAI,QAEvBvF,EAAAjE,EAAAkE,cAAA,QAAMC,UAAU,SACdF,EAAAjE,EAAAkE,cAAA,KAAGwF,KAAK,+BAA+BlD,OAAO,SAASmD,IAAI,uBACzD1F,EAAAjE,EAAAkE,cAAA,OAAKoF,IAAI,gEAAgEM,OAAO,IAAIJ,IAAI,8BAVhEjF,iBCerBsF,mLAZX,OACE5F,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,OACbF,EAAAjE,EAAAkE,cAAC4F,EAAD,MACA7F,EAAAjE,EAAAkE,cAAC6F,EAAD,CACEjB,MAAO,IACPD,OAAQ,cAPAmB,aCOEC,QACW,cAA7B3G,OAAO4G,SAASC,UAEe,UAA7B7G,OAAO4G,SAASC,UAEhB7G,OAAO4G,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrG,EAAAjE,EAAAkE,cAACqG,EAAD,MAAS5G,SAAS6G,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1f601fca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ie6.39ebec55.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e42fe8a0.png\";","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport annyang from 'annyang';\n\nexport default class VoiceController extends PureComponent {\n  static DEFAULT_LANGUAGE = 'en-US';\n\n  static KEY_LEFT = {\n    key: 'ArrowLeft',\n    charCode: 0,\n    code: 'ArrowLeft',\n    keyCode: 37,\n    which: 37,\n  };\n\n  static KEY_UP = {\n    key: 'ArrowUp',\n    charCode: 0,\n    code: 'ArrowUp',\n    keyCode: 38,\n    which: 38,\n  };\n\n  static KEY_DOWN = {\n    key: 'ArrowDown',\n    charCode: 0,\n    code: 'ArrowDown',\n    keyCode: 40,\n    which: 40,\n  };\n\n  static KEY_RIGHT = {\n    key: 'ArrowRight',\n    charCode: 0,\n    code: 'ArrowRight',\n    keyCode: 39,\n    which: 39,\n  };\n\n  static KEY_SELECT = {\n    key: ' ',\n    charCode: 0,\n    code: 'Space',\n    keyCode: 32,\n    which: 32,\n  };\n\n  static KEY_START = {\n    key: 'Enter',\n    charCode: 0,\n    code: 'Enter',\n    keyCode: 13,\n    which: 13,\n  };\n\n  static KEY_A = {\n    key: 'x',\n    charCode: 0,\n    code: 'KeyX',\n    keyCode: 88,\n    which: 88,\n  };\n\n  static KEY_B = {\n    key: 'z',\n    charCode: 0,\n    code: 'KeyZ',\n    keyCode: 90,\n    which: 90,\n  };\n\n  static propTypes = {\n    rom: PropTypes.shape({}),\n  };\n\n  componentDidMount() {\n    if (!annyang) {\n      return;\n    }\n    this.initVoiceRecognition();\n\n    annyang.start({\n      autoRestart: true,\n      paused: false,\n      continuous: false,\n    });\n\n    annyang.debug();\n  }\n\n  componentDidUpdate() {\n    const { commands, commandsLanguage } = this.props.rom;\n    this.initVoiceRecognition(commands, commandsLanguage);\n  }\n\n  initVoiceRecognition(romCommands = null, language = VoiceController.DEFAULT_LANGUAGE) {\n    annyang.removeCommands();\n\n    let commands = {};\n    if (!romCommands) {\n      commands = {\n        left: () => this.keyPress([VoiceController.KEY_LEFT]),\n        right: () => this.keyPress([VoiceController.KEY_RIGHT]),\n        up: () => this.keyPress([VoiceController.KEY_UP]),\n        down: () => this.keyPress([VoiceController.KEY_DOWN]),\n        select: () => this.keyPress([VoiceController.KEY_SELECT]),\n        start: () => this.keyPress([VoiceController.KEY_START]),\n        a: () => this.keyPress([VoiceController.KEY_A]),\n        b: () => this.keyPress([VoiceController.KEY_B]),\n      };\n    } else {\n\n      const asyncForEach = async (array, callback) => {\n        for (let index = 0; index < array.length; index++) {\n          await callback(array[index], index, array);\n        }\n      };\n      commands = Object.entries(romCommands)\n        .reduce((carry, [key, entries]) => {\n          const fn = async () => {\n            await asyncForEach(entries, ([method, ...args]) => typeof method === 'function' ? method(args) : this[method](args));\n          };\n          return { ...carry, [key]: fn }\n        }, {});\n\n    }\n\n    annyang.addCommands(commands);\n    annyang.setLanguage(language);\n\n  }\n\n  async keyPress([key, timeout = 150]) {\n    this.keyHold([key]);\n    return new Promise((resolve) => {\n      window.setTimeout(() => {\n        this.keyRelease([key]);\n        resolve();\n      }, timeout);\n    });\n\n  }\n\n  keyHold([key]) {\n    document.dispatchEvent(new KeyboardEvent('keydown', key));\n  }\n\n  keyRelease([key]) {\n    document.dispatchEvent(new KeyboardEvent('keyup', key));\n  }\n\n  delay([delay]) {\n    return new Promise((resolve) => setTimeout(() => resolve(), delay));\n  }\n\n  render() {\n    const { rom } = this.props;\n    if (!rom) {\n      return null;\n    }\n    const { commands } = rom;\n    if (!commands) {\n      return null;\n    }\n    return (\n      <div className=\"command-list\">\n        <span>Available commands: </span>\n        <ul>\n          {Object.keys(commands).map(command => <li key={command}>\"{command}\"</li>)}\n        </ul>\n      </div>\n      );\n  }\n}","import VoiceController from '../components/VoiceController';\n\nexport default {\n  'memory': {\n    name: 'memory',\n    file: 'memory.nes',\n    commands: {\n      '9': [\n        ['keyPress', VoiceController.KEY_UP],\n        ['keyPress', VoiceController.KEY_RIGHT],\n      ],\n      '7': [\n        ['keyPress', VoiceController.KEY_UP],\n        ['keyPress', VoiceController.KEY_LEFT],\n      ],\n      '1': [\n        ['keyPress', VoiceController.KEY_DOWN],\n        ['keyPress', VoiceController.KEY_LEFT],\n      ],\n      '3': [\n        ['keyPress', VoiceController.KEY_DOWN],\n        ['keyPress', VoiceController.KEY_RIGHT],\n      ],\n      left: [['keyPress', VoiceController.KEY_LEFT]],\n      right: [['keyPress', VoiceController.KEY_RIGHT]],\n      up: [['keyPress', VoiceController.KEY_UP]],\n      down: [['keyPress', VoiceController.KEY_DOWN]],\n      start: [['keyPress', VoiceController.KEY_START]],\n      see: [['keyPress', VoiceController.KEY_A]],\n    },\n  },\n  '2048': {\n    name: '2048',\n    file: '2048.nes',\n    commands: {\n      left: [['keyPress', VoiceController.KEY_LEFT]],\n      right: [['keyPress', VoiceController.KEY_RIGHT]],\n      up: [['keyPress', VoiceController.KEY_UP]],\n      down: [['keyPress', VoiceController.KEY_DOWN]],\n      select: [['keyPress', VoiceController.KEY_SELECT]],\n      start: [['keyPress', VoiceController.KEY_START]],\n      'konami code': [\n        [() => alert('↑↑↓↓←→←→ⒷⒶ')]\n      ],\n    },\n    commandsLanguage: 'en',\n  },\n  '2048pl': {\n    name: '2048 - PL',\n    file: '2048.nes',\n    commands: {\n      lewo: [['keyPress', VoiceController.KEY_LEFT]],\n      prawo: [['keyPress', VoiceController.KEY_RIGHT]],\n      'góra': [['keyPress', VoiceController.KEY_UP]],\n      'dół': [['keyPress', VoiceController.KEY_DOWN]],\n      start: [['keyPress', VoiceController.KEY_START]],\n    },\n    commandsLanguage: 'pl',\n  },\n};","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport roms from '../config/roms';\n\nexport default class RomLoader extends PureComponent {\n  static propTypes = {\n    onRomSelect: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { rom: null };\n    this.onRomChange = this.onRomChange.bind(this);\n  }\n\n  onRomChange(e) {\n    const { target: { value: identifier } } = e;\n    const { [identifier]: rom } = roms;\n\n    if (!rom) {\n      return;\n    }\n    this.props.onRomSelect(rom);\n  }\n\n  render() {\n    return (\n      <div className=\"rom-loader\">\n        <select onChange={this.onRomChange}>\n          <option key=\"select\" defaultValue value={null}>Please select rom</option>\n          {Object.entries(roms)\n            .sort()\n            .map(([key, rom]) => (<option key={key} value={key}>{rom.name}</option>))}\n        </select>\n      </div>\n    );\n  }\n}","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport * as nesjs from 'nes-js';\n\nimport RomLoader from './RomLoader';\nimport VoiceController from './VoiceController';\n\nexport default class Nes extends PureComponent {\n  static propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    displayId: PropTypes.string,\n  };\n\n  static defaultProps = {\n    displayId: 'display',\n  };\n\n  constructor(props) {\n    super(props);\n    this.nes = null;\n    this.canvas = React.createRef();\n    this.state = { rom: null };\n\n    this.loadRom = this.loadRom.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  componentDidMount() {\n    const canvas = this.canvas.current;\n    this.initNes(canvas);\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.onKeyDown, false);\n    document.removeEventListener(\"keyup\", this.onKeyUp, false);\n  }\n\n  initNes(canvas) {\n    const { NesJs } = window;\n\n    const nes = new NesJs.Nes();\n    nes.setDisplay(new NesJs.Display(canvas));\n    nes.setAudio(new NesJs.Audio());\n\n    document.addEventListener('keydown', this.onKeyDown, false);\n    document.addEventListener('keyup', this.onKeyUp, false);\n\n    this.nes = nes;\n  }\n\n  onKeyDown(e) {\n    this.nes.handleKeyDown(e);\n  }\n\n  onKeyUp(e) {\n    this.nes.handleKeyUp(e);\n  }\n\n  async loadRom(romData) {\n    this.setState(current => ({ ...current, rom: romData }));\n    const { NesJs } = window;\n\n    const url = `./roms/${romData.file}`;\n    const response = await fetch(url);\n\n    const buffer = await response.arrayBuffer();\n    const rom = new NesJs.Rom(buffer);\n\n    this.nes.setRom(rom);\n    this.nes.bootup();\n    this.nes.run();\n  }\n\n  render() {\n    return (\n      <div className=\"nes\">\n        <div className=\"tv\" style={{\n          height: this.props.height + 40,\n          width: this.props.width + 250,\n        }}>\n          <canvas\n            ref={this.canvas}\n            id={this.props.displayId}\n            style={{\n              width: this.props.width,\n              height: this.props.height,\n            }}\n          />\n        </div>\n        <RomLoader\n          onRomSelect={this.loadRom}\n        />\n        <VoiceController\n          rom={this.state.rom}\n        />\n      </div>\n    );\n  }\n}","import React, { PureComponent } from 'react';\nimport ie6Logo from '../images/ie6.png';\nimport logo from '../images/logo.png';\n\nexport default class Footer extends PureComponent {\n  render() {\n    return (\n      <header>\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n        <span>sponsored by</span>\n        <img src={ie6Logo} alt=\"ie6\" />\n\n        <span className=\"right\">\n          <a href=\"http://www.cutercounter.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src=\"http://www.cutercounter.com/hit.php?id=grmacoqo&nd=6&style=24\" border=\"0\" alt=\"website counter\" />\n          </a>\n        </span>\n      </header>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Nes from './components/Nes';\nimport Header from './components/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Nes\n          width={512}\n          height={480}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}